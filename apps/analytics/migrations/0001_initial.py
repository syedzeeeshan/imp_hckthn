# Generated by Django 5.0.6 on 2025-09-21 07:53

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authentication', '0001_initial'),
        ('clubs', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DashboardWidget',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('widget_type', models.CharField(choices=[('metric_card', 'Metric Card'), ('line_chart', 'Line Chart'), ('bar_chart', 'Bar Chart'), ('pie_chart', 'Pie Chart'), ('table', 'Data Table'), ('progress_bar', 'Progress Bar'), ('gauge', 'Gauge Chart'), ('heatmap', 'Heat Map')], max_length=20)),
                ('data_source', models.CharField(max_length=100)),
                ('config', models.JSONField(blank=True, default=dict)),
                ('filters', models.JSONField(blank=True, default=dict)),
                ('grid_position', models.JSONField(blank=True, default=dict)),
                ('is_visible', models.BooleanField(default=True)),
                ('is_shared', models.BooleanField(default=False)),
                ('auto_refresh', models.BooleanField(default=True)),
                ('refresh_interval', models.IntegerField(default=300)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('club', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dashboard_widgets', to='clubs.club')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard_widgets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Dashboard Widget',
                'verbose_name_plural': 'Dashboard Widgets',
                'db_table': 'dashboard_widgets',
                'ordering': ['grid_position'],
            },
        ),
        migrations.CreateModel(
            name='AnalyticsReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('report_type', models.CharField(choices=[('club_performance', 'Club Performance'), ('event_analytics', 'Event Analytics'), ('user_engagement', 'User Engagement'), ('financial_summary', 'Financial Summary'), ('collaboration_metrics', 'Collaboration Metrics'), ('college_overview', 'College Overview'), ('monthly_summary', 'Monthly Summary'), ('custom', 'Custom Report')], max_length=30)),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly'), ('one_time', 'One Time')], default='one_time', max_length=20)),
                ('date_from', models.DateField(blank=True, null=True)),
                ('date_to', models.DateField(blank=True, null=True)),
                ('filters', models.JSONField(blank=True, default=dict)),
                ('data', models.JSONField(blank=True, default=dict)),
                ('summary', models.JSONField(blank=True, default=dict)),
                ('charts_config', models.JSONField(blank=True, default=dict)),
                ('is_scheduled', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('generating', 'Generating'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('generation_started_at', models.DateTimeField(blank=True, null=True)),
                ('generation_completed_at', models.DateTimeField(blank=True, null=True)),
                ('next_generation_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('club', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analytics_reports', to='clubs.club')),
                ('college', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analytics_reports', to='authentication.college')),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Analytics Report',
                'verbose_name_plural': 'Analytics Reports',
                'db_table': 'analytics_reports',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['report_type', 'status'], name='analytics_r_report__766651_idx'), models.Index(fields=['club', 'date_from', 'date_to'], name='analytics_r_club_id_1b82c3_idx'), models.Index(fields=['is_scheduled', 'next_generation_at'], name='analytics_r_is_sche_32a9aa_idx')],
            },
        ),
    ]
