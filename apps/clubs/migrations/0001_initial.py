# Generated by Django 5.0.6 on 2025-09-21 07:53

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authentication', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ClubCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, help_text='Icon class name', max_length=50)),
                ('color', models.CharField(default='#007bff', help_text='Hex color code', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Club Category',
                'verbose_name_plural': 'Club Categories',
                'db_table': 'club_categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=220, unique=True)),
                ('description', models.TextField()),
                ('short_description', models.CharField(blank=True, max_length=300)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='club_logos/')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='club_covers/')),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=15)),
                ('website', models.URLField(blank=True)),
                ('social_links', models.JSONField(blank=True, default=dict, help_text='Social media links')),
                ('meeting_location', models.CharField(blank=True, max_length=200)),
                ('meeting_schedule', models.CharField(blank=True, max_length=200)),
                ('meeting_days', models.JSONField(blank=True, default=list, help_text='Days of the week')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('pending', 'Pending Approval'), ('suspended', 'Suspended')], default='pending', max_length=20)),
                ('privacy', models.CharField(choices=[('public', 'Public'), ('private', 'Private'), ('college_only', 'College Only')], default='public', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('requires_approval', models.BooleanField(default=False)),
                ('max_members', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('membership_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('budget', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('total_events', models.IntegerField(default=0)),
                ('total_collaborations', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clubs', to='authentication.college')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_clubs', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clubs', to='clubs.clubcategory')),
            ],
            options={
                'verbose_name': 'Club',
                'verbose_name_plural': 'Clubs',
                'db_table': 'clubs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ClubMembership',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('member', 'Member'), ('leader', 'Leader'), ('admin', 'Admin'), ('treasurer', 'Treasurer'), ('secretary', 'Secretary')], default='member', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('pending', 'Pending'), ('inactive', 'Inactive'), ('banned', 'Banned')], default='pending', max_length=20)),
                ('joined_at', models.DateTimeField(blank=True, null=True)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('events_attended', models.IntegerField(default=0)),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_memberships', to=settings.AUTH_USER_MODEL)),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='clubs.club')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Club Membership',
                'verbose_name_plural': 'Club Memberships',
                'db_table': 'club_memberships',
            },
        ),
        migrations.AddField(
            model_name='club',
            name='members',
            field=models.ManyToManyField(related_name='joined_clubs', through='clubs.ClubMembership', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ClubSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notify_new_members', models.BooleanField(default=True)),
                ('notify_events', models.BooleanField(default=True)),
                ('notify_collaborations', models.BooleanField(default=True)),
                ('show_member_list', models.BooleanField(default=True)),
                ('show_contact_info', models.BooleanField(default=True)),
                ('allow_member_invites', models.BooleanField(default=True)),
                ('auto_approve_events', models.BooleanField(default=False)),
                ('require_event_approval', models.BooleanField(default=True)),
                ('custom_fields', models.JSONField(blank=True, default=dict)),
                ('calendar_sync', models.BooleanField(default=False)),
                ('email_integration', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('club', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='clubs.club')),
            ],
            options={
                'verbose_name': 'Club Settings',
                'verbose_name_plural': 'Club Settings',
                'db_table': 'club_settings',
            },
        ),
        migrations.CreateModel(
            name='ClubAnnouncement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('target_all_members', models.BooleanField(default=True)),
                ('target_roles', models.JSONField(blank=True, default=list, help_text='Specific roles to target')),
                ('is_published', models.BooleanField(default=True)),
                ('send_email', models.BooleanField(default=False)),
                ('send_notification', models.BooleanField(default=True)),
                ('publish_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('views', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='announcements', to='clubs.club')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Club Announcement',
                'verbose_name_plural': 'Club Announcements',
                'db_table': 'club_announcements',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['club', 'is_published'], name='club_announ_club_id_8bdf68_idx'), models.Index(fields=['priority'], name='club_announ_priorit_8d29dd_idx'), models.Index(fields=['publish_at'], name='club_announ_publish_48f046_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='clubmembership',
            index=models.Index(fields=['club', 'status'], name='club_member_club_id_cf5641_idx'),
        ),
        migrations.AddIndex(
            model_name='clubmembership',
            index=models.Index(fields=['user', 'status'], name='club_member_user_id_f60590_idx'),
        ),
        migrations.AddIndex(
            model_name='clubmembership',
            index=models.Index(fields=['role'], name='club_member_role_c960b7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='clubmembership',
            unique_together={('user', 'club')},
        ),
        migrations.AddIndex(
            model_name='club',
            index=models.Index(fields=['status', 'is_active'], name='clubs_status_4ac81a_idx'),
        ),
        migrations.AddIndex(
            model_name='club',
            index=models.Index(fields=['college', 'category'], name='clubs_college_c29a12_idx'),
        ),
        migrations.AddIndex(
            model_name='club',
            index=models.Index(fields=['slug'], name='clubs_slug_4ebba0_idx'),
        ),
    ]
