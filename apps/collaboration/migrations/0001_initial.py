# Generated by Django 5.0.6 on 2025-09-21 07:54

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clubs', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CollaborationType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('color', models.CharField(default='#007bff', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('min_participants', models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(2)])),
                ('max_participants', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(2)])),
                ('requires_approval', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Collaboration Type',
                'verbose_name_plural': 'Collaboration Types',
                'db_table': 'collaboration_types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Collaboration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=220, unique=True)),
                ('description', models.TextField()),
                ('short_description', models.CharField(blank=True, max_length=300)),
                ('tags', models.JSONField(blank=True, default=list, help_text='Project tags for search and categorization')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('application_deadline', models.DateTimeField(blank=True, null=True)),
                ('max_participants', models.IntegerField(validators=[django.core.validators.MinValueValidator(2)])),
                ('min_participants', models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(2)])),
                ('objectives', models.JSONField(blank=True, default=list, help_text='List of project objectives')),
                ('deliverables', models.JSONField(blank=True, default=list, help_text='Expected deliverables')),
                ('requirements', models.JSONField(blank=True, default=list, help_text='Requirements for participation')),
                ('skills_needed', models.JSONField(blank=True, default=list, help_text='Skills needed for the project')),
                ('budget', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('resources_needed', models.JSONField(blank=True, default=list)),
                ('resources_provided', models.JSONField(blank=True, default=list)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('open', 'Open for Applications'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('on_hold', 'On Hold')], default='draft', max_length=20)),
                ('privacy', models.CharField(choices=[('public', 'Public'), ('college_network', 'College Network Only'), ('invite_only', 'Invite Only')], default='public', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('allows_external_participants', models.BooleanField(default=False)),
                ('progress_percentage', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('milestones', models.JSONField(blank=True, default=list)),
                ('communication_channels', models.JSONField(blank=True, default=dict)),
                ('meeting_schedule', models.CharField(blank=True, max_length=200)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='collaboration_images/')),
                ('documents', models.JSONField(blank=True, default=list)),
                ('total_applications', models.IntegerField(default=0)),
                ('total_participants', models.IntegerField(default=0)),
                ('success_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_collaborations', to=settings.AUTH_USER_MODEL)),
                ('initiator_club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='initiated_collaborations', to='clubs.club')),
                ('project_lead', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='led_collaborations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Collaboration',
                'verbose_name_plural': 'Collaborations',
                'db_table': 'collaborations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CollaborationMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message_type', models.CharField(choices=[('general', 'General Discussion'), ('announcement', 'Announcement'), ('milestone_update', 'Milestone Update'), ('question', 'Question'), ('resource_share', 'Resource Sharing')], default='general', max_length=20)),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('content', models.TextField()),
                ('attachments', models.JSONField(blank=True, default=list)),
                ('is_announcement', models.BooleanField(default=False)),
                ('is_pinned', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('collaboration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='collaboration.collaboration')),
                ('parent_message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='collaboration.collaborationmessage')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_collaboration_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Collaboration Message',
                'verbose_name_plural': 'Collaboration Messages',
                'db_table': 'collaboration_messages',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CollaborationMilestone',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('due_date', models.DateField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('progress_percentage', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('deliverables', models.JSONField(blank=True, default=list)),
                ('attachments', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('assigned_clubs', models.ManyToManyField(blank=True, related_name='assigned_milestones', to='clubs.club')),
                ('collaboration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='milestone_objects', to='collaboration.collaboration')),
                ('completed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='completed_milestones', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Collaboration Milestone',
                'verbose_name_plural': 'Collaboration Milestones',
                'db_table': 'collaboration_milestones',
                'ordering': ['due_date'],
            },
        ),
        migrations.CreateModel(
            name='CollaborationParticipation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('active', 'Active Participant'), ('withdrawn', 'Withdrawn'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('role', models.CharField(choices=[('participant', 'Participant'), ('co_lead', 'Co-Lead'), ('contributor', 'Contributor'), ('advisor', 'Advisor'), ('sponsor', 'Sponsor')], default='participant', max_length=20)),
                ('application_message', models.TextField(blank=True)),
                ('committed_members', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('committed_hours_per_week', models.IntegerField(default=5, validators=[django.core.validators.MinValueValidator(1)])),
                ('committed_resources', models.JSONField(blank=True, default=list)),
                ('joined_at', models.DateTimeField(blank=True, null=True)),
                ('contribution_score', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('tasks_completed', models.IntegerField(default=0)),
                ('milestones_achieved', models.IntegerField(default=0)),
                ('final_rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('feedback', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_participations', to=settings.AUTH_USER_MODEL)),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collaboration_participations', to='clubs.club')),
                ('collaboration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participations', to='collaboration.collaboration')),
                ('primary_contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='collaboration_contacts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Collaboration Participation',
                'verbose_name_plural': 'Collaboration Participations',
                'db_table': 'collaboration_participations',
            },
        ),
        migrations.AddField(
            model_name='collaboration',
            name='participating_clubs',
            field=models.ManyToManyField(related_name='collaborations', through='collaboration.CollaborationParticipation', to='clubs.club'),
        ),
        migrations.CreateModel(
            name='CollaborationResource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('resource_type', models.CharField(choices=[('document', 'Document'), ('template', 'Template'), ('dataset', 'Dataset'), ('tool', 'Tool/Software'), ('link', 'External Link'), ('media', 'Media File'), ('other', 'Other')], default='document', max_length=20)),
                ('file', models.FileField(blank=True, null=True, upload_to='collaboration_resources/')),
                ('external_url', models.URLField(blank=True)),
                ('is_public', models.BooleanField(default=False)),
                ('download_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('allowed_clubs', models.ManyToManyField(blank=True, related_name='accessible_collaboration_resources', to='clubs.club')),
                ('collaboration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shared_resources', to='collaboration.collaboration')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Collaboration Resource',
                'verbose_name_plural': 'Collaboration Resources',
                'db_table': 'collaboration_resources',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='collaboration',
            name='collaboration_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='collaborations', to='collaboration.collaborationtype'),
        ),
        migrations.AddIndex(
            model_name='collaborationparticipation',
            index=models.Index(fields=['collaboration', 'status'], name='collaborati_collabo_ff0373_idx'),
        ),
        migrations.AddIndex(
            model_name='collaborationparticipation',
            index=models.Index(fields=['club', 'status'], name='collaborati_club_id_afd88e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='collaborationparticipation',
            unique_together={('collaboration', 'club')},
        ),
        migrations.AddIndex(
            model_name='collaboration',
            index=models.Index(fields=['status', 'is_active'], name='collaborati_status_c6f176_idx'),
        ),
        migrations.AddIndex(
            model_name='collaboration',
            index=models.Index(fields=['start_date', 'end_date'], name='collaborati_start_d_91bc7b_idx'),
        ),
        migrations.AddIndex(
            model_name='collaboration',
            index=models.Index(fields=['slug'], name='collaborati_slug_13a94b_idx'),
        ),
        migrations.AddIndex(
            model_name='collaboration',
            index=models.Index(fields=['privacy'], name='collaborati_privacy_2eec82_idx'),
        ),
    ]
