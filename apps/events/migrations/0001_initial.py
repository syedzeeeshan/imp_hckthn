# Generated by Django 5.0.6 on 2025-09-21 07:53

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clubs', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EventCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('color', models.CharField(default='#007bff', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Event Category',
                'verbose_name_plural': 'Event Categories',
                'db_table': 'event_categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=220, unique=True)),
                ('description', models.TextField()),
                ('short_description', models.CharField(blank=True, max_length=300)),
                ('event_type', models.CharField(choices=[('meeting', 'Meeting'), ('workshop', 'Workshop'), ('seminar', 'Seminar'), ('competition', 'Competition'), ('social', 'Social Event'), ('fundraiser', 'Fundraiser'), ('conference', 'Conference'), ('other', 'Other')], default='other', max_length=20)),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField()),
                ('registration_deadline', models.DateTimeField(blank=True, null=True)),
                ('location', models.CharField(max_length=300)),
                ('venue_details', models.TextField(blank=True)),
                ('is_online', models.BooleanField(default=False)),
                ('meeting_link', models.URLField(blank=True)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='event_images/')),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='event_qr_codes/')),
                ('max_attendees', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('registration_required', models.BooleanField(default=True)),
                ('registration_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('ongoing', 'Ongoing'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('privacy', models.CharField(choices=[('public', 'Public'), ('private', 'Private'), ('club_only', 'Club Members Only'), ('college_only', 'College Only')], default='public', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('requires_approval', models.BooleanField(default=False)),
                ('agenda', models.JSONField(blank=True, default=list)),
                ('speakers', models.JSONField(blank=True, default=list)),
                ('sponsors', models.JSONField(blank=True, default=list)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('resources', models.JSONField(blank=True, default=list)),
                ('external_links', models.JSONField(blank=True, default=list)),
                ('total_registrations', models.IntegerField(default=0)),
                ('total_attendees', models.IntegerField(default=0)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='clubs.club')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_events', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='events.eventcategory')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'db_table': 'events',
                'ordering': ['-start_datetime'],
            },
        ),
        migrations.CreateModel(
            name='EventRegistration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('registered', 'Registered'), ('waitlisted', 'Waitlisted'), ('attended', 'Attended'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='registered', max_length=20)),
                ('registration_data', models.JSONField(blank=True, default=dict)),
                ('payment_status', models.CharField(default='pending', max_length=20)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('checked_in_at', models.DateTimeField(blank=True, null=True)),
                ('check_in_method', models.CharField(default='manual', max_length=20)),
                ('feedback_rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('feedback_comment', models.TextField(blank=True)),
                ('feedback_submitted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('checked_in_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='checked_in_registrations', to=settings.AUTH_USER_MODEL)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='events.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_registrations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Event Registration',
                'verbose_name_plural': 'Event Registrations',
                'db_table': 'event_registrations',
            },
        ),
        migrations.CreateModel(
            name='EventFeedback',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('overall_rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('content_rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('organization_rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('venue_rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField(blank=True)),
                ('suggestions', models.TextField(blank=True)),
                ('would_recommend', models.BooleanField(blank=True, null=True)),
                ('would_attend_again', models.BooleanField(blank=True, null=True)),
                ('additional_feedback', models.JSONField(blank=True, default=dict)),
                ('is_anonymous', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_entries', to='events.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('registration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='events.eventregistration')),
            ],
            options={
                'verbose_name': 'Event Feedback',
                'verbose_name_plural': 'Event Feedback',
                'db_table': 'event_feedback',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EventResource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('resource_type', models.CharField(choices=[('document', 'Document'), ('presentation', 'Presentation'), ('video', 'Video'), ('audio', 'Audio'), ('link', 'External Link'), ('image', 'Image'), ('other', 'Other')], default='document', max_length=20)),
                ('file', models.FileField(blank=True, null=True, upload_to='event_resources/')),
                ('external_url', models.URLField(blank=True)),
                ('is_public', models.BooleanField(default=False)),
                ('requires_registration', models.BooleanField(default=True)),
                ('download_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_files', to='events.event')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Event Resource',
                'verbose_name_plural': 'Event Resources',
                'db_table': 'event_resources',
                'ordering': ['title'],
            },
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['status', 'is_active'], name='events_status_291f8c_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['club', 'start_datetime'], name='events_club_id_5ebf3a_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['slug'], name='events_slug_930801_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['start_datetime', 'end_datetime'], name='events_start_d_c4a32d_idx'),
        ),
        migrations.AddIndex(
            model_name='eventregistration',
            index=models.Index(fields=['event', 'status'], name='event_regis_event_i_a22351_idx'),
        ),
        migrations.AddIndex(
            model_name='eventregistration',
            index=models.Index(fields=['user', 'status'], name='event_regis_user_id_d6b1a1_idx'),
        ),
        migrations.AddIndex(
            model_name='eventregistration',
            index=models.Index(fields=['checked_in_at'], name='event_regis_checked_e5beea_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='eventregistration',
            unique_together={('user', 'event')},
        ),
        migrations.AlterUniqueTogether(
            name='eventfeedback',
            unique_together={('event', 'user')},
        ),
    ]
